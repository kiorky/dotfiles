[color]
        diff = auto
        status = auto
        branch = auto
        ui = auto
[color "branch"]
        current = yellow reverse
        local = yellow
        remote = green
[color "diff"]
        meta = yellow bold
        frag = magenta bold
        old = red bold
        new = green bold
        whitespace = red reverse
[color "status"]
        added = yellow
        changed = green
        untracked = cyan
[user]
        name = Mathieu Le Marec - Pasquet
        email = kiorky@cryptelium.net
[github]
        user = kiorky
[alias]
        rc = rebase --continue
        m = merge --no-commit --no-ff -e
        r = !"f() { git reset $@; git checkout $@; }; f"
        st = status
        ci = commit
        br = branch
        co = checkout
        coo = checkout --ours
        cot = checkout --theirs
        df = diff
        lg = log -p
        mpan = config user.email "mpa@makina-corpus.com"
        mpae = config user.name 'Mathieu Le Marec - Pasquet'
        mpa =  !git mpan && git mpae
        kn = config user.email "kiorky@cryptelium.net"
        ke = config user.name 'Mathieu Le Marec - Pasquet'
        k =  !git kn && git ke
        pt = log --pretty=format:'%C(yellow)%h%Cred%d%Creset - %C(cyan)%an %Creset: %s %Cgreen(%cr)'
        bt = log --pretty=format:'%C(yellow)%h : %Creset%s'
        changes=diff --name-status -r
        rco= !"f() { echo \"$@\" | while read f;do ( ( git reset -- $f || true ) && ( git checkout -- $f || true ) ) || true;done }; f \"$@\""
        bdiff= !"f() { git pt $(git symbolic-ref -q --short HEAD) ^${1:-master} ; }; f"
        ibdiff= !"f() { git pt ${1:-master} ^$(git symbolic-ref -q --short HEAD) ; }; f"
        stree =log --graph --oneline --decorate --all
        cdiff = diff --cached

[core]
    whitespace=fix,-indent-with-non-tab,trailing-space,cr-at-eol
    filemode=false
	excludesfile = /home/kiorky/.gitignore
	editor = vim
[diff]
        renames = true
[push]
	default = matching
[merge]
	tool = vimdiff
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
